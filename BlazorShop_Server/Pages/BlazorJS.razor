@page "/Blazorjs"
@inject IJSRuntime _JsRuntime


<h3>BlazorJS</h3>

<div class="row">
	<button class="btn btn-secondary" style="width:100px;" @onclick="TestConfirmBox">Test Confirm Box</button>
</div>
<div class="row">
	<button class="btn btn-success" style="width:100px;" @onclick="ToasterSuccess">Toast success</button>
	<button class="btn btn-danger" style="width:100px;" @onclick="ToasterFailure">Toast error</button>
</div>
<br />
<div class="row">
	<button class="btn btn-success" style="width:100px;" @onclick="SweetAlertSuccess">SweetAlert success</button>
	<button class="btn btn-danger" style="width:100px;" @onclick="SweetAlertFailure">SweetAlert error</button>
</div>

@if (ConfirmResult)
{
	<p>Confirmation has been mad3e!</p>
}
else
{
	<p>Confirmation pending</p>
}

@code {
	private string ConfirmMessage = "Are you sure you want to proceed?";

	private bool ConfirmResult { get; set; }

	private async Task TestConfirmBox()
	{
		ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);

	}
	private async Task ToasterSuccess()
	{
		await _JsRuntime.ToastrSuccess("operation Succesful");

	}
	private async Task ToasterFailure()
	{
		await _JsRuntime.ToasterFailure("operation Failed");

	}
	private async Task SweetAlertSuccess()
	{
		await _JsRuntime.InvokeVoidAsync("ShowSwal", "success", "Task Completed Successfuly");

	}
	private async Task SweetAlertFailure()
	{
		await _JsRuntime.InvokeVoidAsync("ShowSwal", "error", "Task Failed Successfuly");

	}
}

