@using Shop_Models.LearnBlazorModels

@page "/learnBlazor/Demo_Product"
<h3 class="text-primary ">Demo_Product</h3>
<p>Number of favorites: @SelectedFavoriteCount</p>
<p>Last Seledted Product: @LastSelectedProductName</p>
<div class="border p-2 mt-2" style="background-color:azure">
	<div class="row">
		@foreach (var prod in Products)
		{
			<ListedProduct Product="prod" onFavoriteUpdated="FavoriteCountUpdate"
				onLastSelectedProductChange="SelectedProductUpdate">
				<FirstFragment>#1</FirstFragment>	
				<SecondFragment>#2</SecondFragment>
			</ListedProduct>
		}
	</div>
</div>


@code {
	List<Demo_Products> Products = new();
	private int SelectedFavoriteCount { get; set; } = 0;
	private string LastSelectedProductName { get; set; }

	protected override void OnInitialized()
	{
		Products.Add(new()
			{
				Id = 1,
				Name = "Midnight Blaze",
				IsActive = false,
				Price = 42.68,
				ProductProperties = new()
				{
				new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
					 new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
					new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
				}
			});

		Products.Add(new()
			{
				Id = 2,
				Name = "Blossom Lily",
				IsActive = true,
				Price = 69.99,
				ProductProperties = new()
			{
				new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
				new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
				new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
			}
			});
	}

	protected void FavoriteCountUpdate( bool isSelected)
	{
		if(isSelected)
		{
			SelectedFavoriteCount++;
		}
		else
		{
			SelectedFavoriteCount--;
		}

	}

	protected void SelectedProductUpdate( string productName)
	{
		LastSelectedProductName = productName;
	}
}
