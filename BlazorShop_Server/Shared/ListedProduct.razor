@using Shop_Models.LearnBlazorModels

<div class="bg-light border m-1 col-5" @onclick="(args)=>LastSelectedProduct(args, Product.Name)">
		<h4 class="text-secondary">Product - @Product.Id</h4>
		<input type="checkbox" @onchange="FavoriteUpdated" /> Add to Favorite <br />
		Name - @Product.Name<br />
		Show Properties : <input type="checkbox" @bind-value="Product.IsActive" checked=@(Product.IsActive?"checked":null) />

		@if (Product.IsActive)
			{
				{
				@foreach (var prodProp in Product.ProductProperties)
					{
						<p>@prodProp.Key - @prodProp.Value</p>
					}

				}
			}
			<br />
		<EditDeleteButton IsActive="Product.IsActive"></EditDeleteButton>
	</div>

}
@code {
	[Parameter]
	public Demo_Products Product { get; set; }

	[Parameter]
	public EventCallback<bool> onFavoriteUpdated { get; set; }

	[Parameter]
	public EventCallback<string> onLastSelectedProductChange{ get; set; }

	private async Task FavoriteUpdated(ChangeEventArgs e)
	{
		await onFavoriteUpdated.InvokeAsync((bool)e.Value);

	}

	private async Task LastSelectedProduct(MouseEventArgs e, string name)
	{
		await onLastSelectedProductChange.InvokeAsync(name);

	}
	
}
